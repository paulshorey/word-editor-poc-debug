{"version":3,"file":"commands.js","mappings":"gBACIA,EAAsB,CAAC,ECD3BA,EAAoBC,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCGxB,IAAIC,EAAsB,CAAC,G,gBCI3BC,QAAQC,IAAI,iBAMZC,OAAOC,SAAQ,WACbH,QAAQC,IAAI,oBAId,KAyByB,oBAATG,KACVA,KACkB,oBAAXN,OACPA,YACkB,IAAXO,EAAAA,EACPA,EAAAA,OACAC,GAMJC,OA5BF,SAAgBC,GACd,IAAMC,EAA6C,CACjDC,KAAMR,OAAOS,aAAaC,4BAA4BC,qBACtDJ,QAAS,oBACTK,KAAM,aACNC,YAAY,GAIdb,OAAOc,QAAQC,QAAQC,KAAKC,qBAAqBC,aAAa,SAAUX,GAGxED,EAAMa,WACR,E,iaDpCAC,CAA2B,EAAGvB,EAAqBP,E","sources":["webpack://office-addin-taskpane-react/webpack/bootstrap","webpack://office-addin-taskpane-react/webpack/runtime/global","webpack://office-addin-taskpane-react/webpack/startup","webpack://office-addin-taskpane-react/./src/addin/commands.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[26100](0, __webpack_exports__, __webpack_require__);\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global console, global, Office, self, window */\n\nconsole.log(\"COMMANDS . TS\");\n\n// Office.addin.setStartupBehavior(Office.StartupBehavior.load);\n// Office.context.document.settings.set(\"Office.AutoShowTaskpaneWithDocument\", true);\n// Office.context.document.settings.saveAsync();\n\nOffice.onReady(() => {\n  console.log(\"OFFICE . ON READY\");\n  // $(window.document).ready(function () {\n  //   console.log(\"COMMANDS . TS -- office on ready, document ready\");\n  // });\n});\n// Office.initialize = () => {\n//   console.log(\"OFFICE . INITIALIZE\");\n// };\n\n/**\n * Shows a notification when the add-in command is executed.\n * @param event\n */\nfunction action(event: Office.AddinCommands.Event) {\n  const message: Office.NotificationMessageDetails = {\n    type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,\n    message: \"Performed action.\",\n    icon: \"Icon.80x80\",\n    persistent: true,\n  };\n\n  // Show a notification message\n  Office.context.mailbox.item.notificationMessages.replaceAsync(\"action\", message);\n\n  // Be sure to indicate when the add-in command function is complete\n  event.completed();\n}\n\nfunction getGlobal() {\n  return typeof self !== \"undefined\"\n    ? self\n    : typeof window !== \"undefined\"\n    ? window\n    : typeof global !== \"undefined\"\n    ? global\n    : undefined;\n}\n\nconst g = getGlobal() as any;\n\n// The add-in command functions need to be available in global scope\ng.action = action;\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","__webpack_exports__","console","log","Office","onReady","self","global","undefined","action","event","message","type","MailboxEnums","ItemNotificationMessageType","InformationalMessage","icon","persistent","context","mailbox","item","notificationMessages","replaceAsync","completed","__webpack_modules__"],"sourceRoot":""}